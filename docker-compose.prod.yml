services:
  app:
    build:
      context: app
      dockerfile: dockerfile
    volumes:
      - ./app/dist:/var/app/dist
      - ./app:/var/app
    env_file:
      - .env.prod

  api:
    build:
      context: api
      dockerfile: dockerfile
    restart: unless-stopped
    volumes:
      - ./api:/var/app
      - ./geoserver.d/data:/var/app/geoserver_data
    env_file:
      .env.prod
    depends_on:
      - redis
      - geoserver

  redis:
    image: redis:latest
    container_name: redis
    restart: unless-stopped

  geoserver:
    image: docker.osgeo.org/geoserver:2.27.x
    container_name: geoserver
    restart: unless-stopped
    volumes:
      - ./geoserver.d/data:/opt/geoserver_data/data
      - ./geoserver.d/workspaces/RF-SITE-PLANNER:/opt/geoserver_data/workspaces/RF-SITE-PLANNER
    env_file:
      .env.prod

  nginx:
    image: nginx:alpine
    restart: unless-stopped
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./app/dist:/var/www/html
    ports:
      - 80:80
    depends_on:
      app:
        condition: service_completed_successfully
      api:
        condition: service_started
      geoserver:
        condition: service_started